/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package selektorgalaktyk;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import selektorgalaktyk.WyświetlaczObraz.RodzajeProgowania;
import static selektorgalaktyk.WyświetlaczObraz.RodzajeProgowania.BRAK_PROGROWANIA;
import static selektorgalaktyk.WyświetlaczObraz.RodzajeProgowania.EFEKT_PRZYCIEMNAJACY;
import static selektorgalaktyk.WyświetlaczObraz.RodzajeProgowania.EFEKT_ROZJASNIAJACY;
import static selektorgalaktyk.WyświetlaczObraz.RodzajeProgowania.PROGOWANIE;

/**
 *
 * @author Norbert
 */
public class PanelSterowania extends JFrame implements ActionListener {
   
    
    public BufferedImage ObrazEdytowalny;
    public WyświetlaczObraz OknoWyświetlOryginał;
    public WyświetlaczObraz OknoEdytowalnyObraz;
    public String ScieszkaWybranyPlikObrazu;
    public String ScieszkaWybranyFolderWejscia;
    public String ScieszkaWybranyFolderWyjscia;
  
     
    WyborPliku WybranyPlikObrazu; 
    WyborFolderu WybranyFolderWejscia; 
    WyborFolderu WybranyFolderWyjscia; 
    
    
    public RodzajeProgowania ZastosujProgowanie = BRAK_PROGROWANIA;
   
    ArrayList <String> ListaObrazówWFolderze;
    
    public ArrayList <Galaktyka> PojedynczaSelekcja;
    private OknoListyGalaktyk OknoListyGalaktyk;
    
    public PanelSterowania() {
        super("Selektor Galaktyczny");
        initComponents();
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Konsola = new javax.swing.JTextArea();
        WybierzFolderZrodlowy = new javax.swing.JButton();
        WybierzFolderWyjsciowy = new javax.swing.JButton();
        ZapiszWynikoweObrazy = new javax.swing.JButton();
        ZaladujPojedynczyObraz = new javax.swing.JButton();
        OknoEdycjiDlaPojedynczegoObrazu = new javax.swing.JButton();
        ZaladowanieOryginalu = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        WykonanieSelekcjiMasowej = new javax.swing.JButton();
        WykonanieSelekcjiPojedynczej = new javax.swing.JButton();
        ListaGalaktyk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PanelGlowny = new javax.swing.JLayeredPane();
        NatezenieKolorowZakladka = new javax.swing.JPanel();
        SliderCzerwony = new javax.swing.JSlider();
        LabelCzerwony = new javax.swing.JLabel();
        LabelZielony = new javax.swing.JLabel();
        SliderZielony = new javax.swing.JSlider();
        LabelNiebieski = new javax.swing.JLabel();
        SliderNiebieski = new javax.swing.JSlider();
        LabelZielonyWartosc = new javax.swing.JLabel();
        LabelCzerwonyWartosc = new javax.swing.JLabel();
        LabelNiebieskiWartosc = new javax.swing.JLabel();
        UstawieniaObrazuZakladka = new javax.swing.JPanel();
        SliderJasnosc = new javax.swing.JSlider();
        LabelJasnosc = new javax.swing.JLabel();
        LabelKontrast = new javax.swing.JLabel();
        SliderKontrast = new javax.swing.JSlider();
        LabelWartoscProgowa = new javax.swing.JLabel();
        SliderWartoscProgowa = new javax.swing.JSlider();
        ToggleProgowanie = new javax.swing.JToggleButton();
        ToggleEfektPrzyciemniania = new javax.swing.JToggleButton();
        ToggleEfektRozjasniania = new javax.swing.JToggleButton();
        LabelWartoscJasnosc = new javax.swing.JLabel();
        LabelWartoscKontrast = new javax.swing.JLabel();
        LabelWartoscWartoscProgowa = new javax.swing.JLabel();
        OperacjeNaObrazachZakladka = new javax.swing.JPanel();
        WielkoscObrazuX = new javax.swing.JSlider();
        LabelWielkoscObrazuZapisanegoPoziom = new javax.swing.JLabel();
        LabelWielkoscObrazuPion = new javax.swing.JLabel();
        WielkoscObrazuY = new javax.swing.JSlider();
        ButtonStworzPlikJPGzTeraźniejszymUstawieniem = new javax.swing.JButton();
        ButtonStworzPlikPDFzTerazniejszymUstawieniem = new javax.swing.JButton();
        LabelWielkoscObrazuX = new javax.swing.JLabel();
        LabelWielkoscObrazuY = new javax.swing.JLabel();
        ParametryDetekcjiZakladka = new javax.swing.JPanel();
        SliderRozmycie = new javax.swing.JSlider();
        LabelRozmycie = new javax.swing.JLabel();
        LabelCzulosc = new javax.swing.JLabel();
        SliderCzulosc = new javax.swing.JSlider();
        LabelMinWielkoscX = new javax.swing.JLabel();
        SliderMinWielkoscX = new javax.swing.JSlider();
        LabelMinWielkoscY = new javax.swing.JLabel();
        SliderMinWielkoscY = new javax.swing.JSlider();
        LabelRozmycieWartosc = new javax.swing.JLabel();
        LabelCzuloscWartosc = new javax.swing.JLabel();
        LabelMinimalnaWielkoscXWartosc = new javax.swing.JLabel();
        LabelMinimalnaWielkoscYWartosc = new javax.swing.JLabel();
        UstawieniaPlaskiPrzekatnyZakladka = new javax.swing.JPanel();
        SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JSlider();
        LabelPlaskiPPProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JLabel();
        LabelPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata = new javax.swing.JLabel();
        SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata = new javax.swing.JSlider();
        LabelPlaskiPPProcentZapelnieniaBialymiProgSoczewkowata = new javax.swing.JLabel();
        SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata = new javax.swing.JSlider();
        LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSpiralne = new javax.swing.JLabel();
        LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSoczewkowate = new javax.swing.JLabel();
        LabelPlaskiPPProcentZapelnieniapikselamiBialymiSoczewkowate = new javax.swing.JLabel();
        LabelPZJPGSpi = new javax.swing.JLabel();
        LabelPZJPGS = new javax.swing.JLabel();
        LabelPZBPGS = new javax.swing.JLabel();
        UstawieniaPłaskiSymetrycznyZakladka = new javax.swing.JPanel();
        LabelPlaskiSymProcentZapelnieniaJasnymiProgKarlowata = new javax.swing.JLabel();
        LabelPlaskiSymProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JLabel();
        LabelPlaskiSymProcentZapelnieniaJasnymiBialymiProgSpiralna = new javax.swing.JLabel();
        LabelPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata = new javax.swing.JLabel();
        LabelPlaskiSymProcentZapelnieniaBialymiProgSoczewkowata = new javax.swing.JLabel();
        SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata = new javax.swing.JSlider();
        SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JSlider();
        SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna = new javax.swing.JSlider();
        SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata = new javax.swing.JSlider();
        SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata = new javax.swing.JSlider();
        LabePlaskiSymProcentZapelenieniaJasnymiKarlowata = new javax.swing.JLabel();
        LabePlaskiSymProcentZapelenieniaJasnymiSpiralna = new javax.swing.JLabel();
        LabePlaskiSymProcentZapelenieniaBialymiSpiralna = new javax.swing.JLabel();
        LabePlaskiSymProcentZapelenieniaJasnymiSoczewkowata = new javax.swing.JLabel();
        LabePlaskiSymProcentZapelenieniaBialymiSoczewkowata = new javax.swing.JLabel();
        LabelPZJDK = new javax.swing.JLabel();
        LabelPZJS = new javax.swing.JLabel();
        LabelPZBS = new javax.swing.JLabel();
        LabelPZJSocz = new javax.swing.JLabel();
        LabelPZBSocz = new javax.swing.JLabel();
        UstawieniaPelnyZakladka = new javax.swing.JPanel();
        LabelPelnyProcentZapelnieniaJasnymiProgKarlowata = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaBiałymiProgKarlowata = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaBiałymiProgSpiralna = new javax.swing.JLabel();
        LabelPelnyLiczbaJasnychProgObiektow = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaBiałymiProgEliptyczna = new javax.swing.JLabel();
        SliderPelnyProcentZapelnieniaJasnymiProgKarlowata = new javax.swing.JSlider();
        SliderPelnyProcentZapelnieniaBiałymiProgKarlowata = new javax.swing.JSlider();
        SliderPelnyProcentZapelnieniaJasnymiProgSpiralna = new javax.swing.JSlider();
        SliderPelnyProcentZapelnieniaBiałymiProgSpiralna = new javax.swing.JSlider();
        SliderPelnyLiczbaJasnychProgObiektow = new javax.swing.JSlider();
        SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna = new javax.swing.JSlider();
        LabelPelnyProcentZapelnieniaJasnymiKarlowata = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaBiałymiSpiralna = new javax.swing.JLabel();
        LabelPelnyLiczbaJasnychObiektow = new javax.swing.JLabel();
        LabelPelnyProcentZapelnieniaBialymiEliptyczna = new javax.swing.JLabel();
        LabelPZJPGK = new javax.swing.JLabel();
        LabelPZBPGK = new javax.swing.JLabel();
        LabelPZBPGSPisarlne = new javax.swing.JLabel();
        LabelPZJPGSpiralne = new javax.swing.JLabel();
        LabelLJO = new javax.swing.JLabel();
        LabelPZBPGE = new javax.swing.JLabel();
        UstawieniaNieregularneZakladka = new javax.swing.JPanel();
        SliderNieregularnaProgRozmycie = new javax.swing.JSlider();
        SliderNieregularnaProgJasnosc = new javax.swing.JSlider();
        LabelNieregularnaProgRozmycie = new javax.swing.JLabel();
        LabelNieregularnaProgJasnosci = new javax.swing.JLabel();
        LabelNieregularnaJansosc = new javax.swing.JLabel();
        LabelNieregularnaRozmycie = new javax.swing.JLabel();
        LabelWartoscRozmycie = new javax.swing.JLabel();
        LabelWartoscProgJasnosci = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuUstawieniaObrazu = new javax.swing.JMenu();
        NatezenieKolorow = new javax.swing.JMenuItem();
        UstawieniaObrazu = new javax.swing.JMenuItem();
        OperacjeNaObrazach = new javax.swing.JMenuItem();
        MenuUstawieniaSelekcji = new javax.swing.JMenu();
        ParametryDetekcji = new javax.swing.JMenuItem();
        UstawieniaPłaskiPrzekątny = new javax.swing.JMenuItem();
        UstawieniaPłaskiSymetryczny = new javax.swing.JMenuItem();
        UstawieniaPełny = new javax.swing.JMenuItem();
        UstawieniaNieregularne = new javax.swing.JMenuItem();
        Pomoc = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GALAXY  - Sysem do wykrywania galaktyk na zdjęciach");

        Konsola.setColumns(20);
        Konsola.setRows(5);
        jScrollPane1.setViewportView(Konsola);

        WybierzFolderZrodlowy.setText("Wybierz folder żródłowy");
        WybierzFolderZrodlowy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WybierzFolderZrodlowyMouseClicked(evt);
            }
        });

        WybierzFolderWyjsciowy.setText("Wybierz folder wyjściowy");
        WybierzFolderWyjsciowy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WybierzFolderWyjsciowyMouseClicked(evt);
            }
        });

        ZapiszWynikoweObrazy.setText("Zapisz Wynikowe Obrazy");
        ZapiszWynikoweObrazy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZapiszWynikoweObrazyActionPerformed(evt);
            }
        });

        ZaladujPojedynczyObraz.setText("Załaduj pojedyńczy Obraz");
        ZaladujPojedynczyObraz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZaladujPojedynczyObrazMouseClicked(evt);
            }
        });
        ZaladujPojedynczyObraz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZaladujPojedynczyObrazActionPerformed(evt);
            }
        });

        OknoEdycjiDlaPojedynczegoObrazu.setText("Okno edycji dla jednego obrazu");
        OknoEdycjiDlaPojedynczegoObrazu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OknoEdycjiDlaPojedynczegoObrazuMouseClicked(evt);
            }
        });

        ZaladowanieOryginalu.setText("Załadowanie Oryginału");
        ZaladowanieOryginalu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZaladowanieOryginaluMouseClicked(evt);
            }
        });

        WykonanieSelekcjiMasowej.setText("Wykonanie Selekcji Masowej");

        WykonanieSelekcjiPojedynczej.setText("Wykonanie Selekcji Pojedyńczej");
        WykonanieSelekcjiPojedynczej.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WykonanieSelekcjiPojedynczejMouseClicked(evt);
            }
        });

        ListaGalaktyk.setText("Lista Galaktyk ");
        ListaGalaktyk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaGalaktykMouseClicked(evt);
            }
        });

        jLabel1.setText("Konsola komunikatów");

        PanelGlowny.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 51, 255)));
        PanelGlowny.setMaximumSize(new java.awt.Dimension(550, 277));

        SliderCzerwony.setMaximum(255);
        SliderCzerwony.setValue(0);
        SliderCzerwony.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderCzerwonyStateChanged(evt);
            }
        });
        SliderCzerwony.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderCzerwonyMouseReleased(evt);
            }
        });

        LabelCzerwony.setText("Czerwony");

        LabelZielony.setText("Zielony");

        SliderZielony.setMaximum(255);
        SliderZielony.setValue(0);
        SliderZielony.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderZielonyStateChanged(evt);
            }
        });
        SliderZielony.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderZielonyMouseReleased(evt);
            }
        });

        LabelNiebieski.setText("Niebieski");

        SliderNiebieski.setMaximum(255);
        SliderNiebieski.setValue(0);
        SliderNiebieski.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderNiebieskiStateChanged(evt);
            }
        });
        SliderNiebieski.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderNiebieskiMouseReleased(evt);
            }
        });

        LabelZielonyWartosc.setText(String.valueOf(SliderZielony.getValue()));

        LabelCzerwonyWartosc.setText(String.valueOf(SliderCzerwony.getValue()));
        LabelCzerwonyWartosc.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);

        LabelNiebieskiWartosc.setText(String.valueOf(SliderNiebieski.getValue()));

        javax.swing.GroupLayout NatezenieKolorowZakladkaLayout = new javax.swing.GroupLayout(NatezenieKolorowZakladka);
        NatezenieKolorowZakladka.setLayout(NatezenieKolorowZakladkaLayout);
        NatezenieKolorowZakladkaLayout.setHorizontalGroup(
            NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NatezenieKolorowZakladkaLayout.createSequentialGroup()
                .addGroup(NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelCzerwony)
                    .addComponent(LabelZielony)
                    .addComponent(LabelNiebieski)
                    .addComponent(SliderZielony, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                    .addComponent(SliderNiebieski, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SliderCzerwony, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelZielonyWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelCzerwonyWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelNiebieskiWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        NatezenieKolorowZakladkaLayout.setVerticalGroup(
            NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NatezenieKolorowZakladkaLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(LabelCzerwony)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelCzerwonyWartosc)
                    .addComponent(SliderCzerwony, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelZielony)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelZielonyWartosc)
                    .addComponent(SliderZielony, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelNiebieski)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NatezenieKolorowZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelNiebieskiWartosc)
                    .addComponent(SliderNiebieski, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        SliderJasnosc.setMaximum(255);
        SliderJasnosc.setMinimum(-400);
        SliderJasnosc.setValue(-65);
        SliderJasnosc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderJasnoscStateChanged(evt);
            }
        });
        SliderJasnosc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderJasnoscMouseReleased(evt);
            }
        });

        LabelJasnosc.setText("Jasność");

        LabelKontrast.setText("Konstrast");

        SliderKontrast.setMaximum(10000);
        SliderKontrast.setSnapToTicks(true);
        SliderKontrast.setValue(5050);
        SliderKontrast.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderKontrastStateChanged(evt);
            }
        });
        SliderKontrast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderKontrastMouseReleased(evt);
            }
        });

        LabelWartoscProgowa.setText("Wartosc Progowa");

        SliderWartoscProgowa.setMaximum(255);
        SliderWartoscProgowa.setValue(74);
        SliderWartoscProgowa.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderWartoscProgowaStateChanged(evt);
            }
        });
        SliderWartoscProgowa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SliderWartoscProgowaMouseReleased(evt);
            }
        });

        ToggleProgowanie.setText("Progowanie");
        ToggleProgowanie.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ToggleProgowanieStateChanged(evt);
            }
        });
        ToggleProgowanie.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                ToggleProgowanieMouseDragged(evt);
            }
        });
        ToggleProgowanie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ToggleProgowanieMousePressed(evt);
            }
        });
        ToggleProgowanie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToggleProgowanieActionPerformed(evt);
            }
        });

        ToggleEfektPrzyciemniania.setText("Efekt Przyciemniania");
        ToggleEfektPrzyciemniania.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ToggleEfektPrzyciemnianiaMousePressed(evt);
            }
        });

        ToggleEfektRozjasniania.setText("Efekt Rozjaśniania");
        ToggleEfektRozjasniania.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ToggleEfektRozjasnianiaMousePressed(evt);
            }
        });

        LabelWartoscJasnosc.setText(String.valueOf(SliderJasnosc.getValue()));

        LabelWartoscKontrast.setText(String.valueOf(SliderKontrast.getValue()/1000));

        LabelWartoscWartoscProgowa.setText(String.valueOf(SliderWartoscProgowa.getValue()));

        javax.swing.GroupLayout UstawieniaObrazuZakladkaLayout = new javax.swing.GroupLayout(UstawieniaObrazuZakladka);
        UstawieniaObrazuZakladka.setLayout(UstawieniaObrazuZakladkaLayout);
        UstawieniaObrazuZakladkaLayout.setHorizontalGroup(
            UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaObrazuZakladkaLayout.createSequentialGroup()
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderJasnosc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SliderKontrast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(UstawieniaObrazuZakladkaLayout.createSequentialGroup()
                        .addGap(0, 30, Short.MAX_VALUE)
                        .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelKontrast)
                            .addComponent(LabelWartoscProgowa)
                            .addComponent(LabelJasnosc)
                            .addGroup(UstawieniaObrazuZakladkaLayout.createSequentialGroup()
                                .addComponent(ToggleProgowanie)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ToggleEfektRozjasniania, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ToggleEfektPrzyciemniania, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(SliderWartoscProgowa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelWartoscKontrast, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelWartoscJasnosc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelWartoscWartoscProgowa, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(21, 21, 21))
        );
        UstawieniaObrazuZakladkaLayout.setVerticalGroup(
            UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaObrazuZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelJasnosc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SliderJasnosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelWartoscJasnosc))
                .addComponent(LabelKontrast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelWartoscKontrast)
                    .addComponent(SliderKontrast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(LabelWartoscProgowa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderWartoscProgowa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelWartoscWartoscProgowa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(UstawieniaObrazuZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ToggleProgowanie)
                    .addComponent(ToggleEfektRozjasniania)
                    .addComponent(ToggleEfektPrzyciemniania))
                .addContainerGap())
        );

        WielkoscObrazuX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                WielkoscObrazuXStateChanged(evt);
            }
        });

        LabelWielkoscObrazuZapisanegoPoziom.setText("Wielkość obrazu zapisanego poziom w %");

        LabelWielkoscObrazuPion.setText("Wielkość obrazu zapisanego pion w %");

        WielkoscObrazuY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                WielkoscObrazuYStateChanged(evt);
            }
        });

        ButtonStworzPlikJPGzTeraźniejszymUstawieniem.setText("Stwórz Plik JPG z Teraźniejszym ustawieniem");
        ButtonStworzPlikJPGzTeraźniejszymUstawieniem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStworzPlikJPGzTeraźniejszymUstawieniemActionPerformed(evt);
            }
        });

        ButtonStworzPlikPDFzTerazniejszymUstawieniem.setText("Stwórz Plik PDF z Teraźniejszym Ustawieniem");

        LabelWielkoscObrazuX.setText(String.valueOf(WielkoscObrazuX.getValue())
        );

        LabelWielkoscObrazuY.setText(String.valueOf(WielkoscObrazuY.getValue()));

        javax.swing.GroupLayout OperacjeNaObrazachZakladkaLayout = new javax.swing.GroupLayout(OperacjeNaObrazachZakladka);
        OperacjeNaObrazachZakladka.setLayout(OperacjeNaObrazachZakladkaLayout);
        OperacjeNaObrazachZakladkaLayout.setHorizontalGroup(
            OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacjeNaObrazachZakladkaLayout.createSequentialGroup()
                .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OperacjeNaObrazachZakladkaLayout.createSequentialGroup()
                        .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LabelWielkoscObrazuZapisanegoPoziom)
                            .addComponent(LabelWielkoscObrazuPion)
                            .addComponent(WielkoscObrazuY, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                            .addComponent(WielkoscObrazuX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelWielkoscObrazuY)
                            .addComponent(LabelWielkoscObrazuX)))
                    .addGroup(OperacjeNaObrazachZakladkaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonStworzPlikPDFzTerazniejszymUstawieniem, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonStworzPlikJPGzTeraźniejszymUstawieniem, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        OperacjeNaObrazachZakladkaLayout.setVerticalGroup(
            OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OperacjeNaObrazachZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelWielkoscObrazuZapisanegoPoziom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WielkoscObrazuX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelWielkoscObrazuX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelWielkoscObrazuPion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OperacjeNaObrazachZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WielkoscObrazuY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelWielkoscObrazuY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(ButtonStworzPlikJPGzTeraźniejszymUstawieniem)
                .addGap(45, 45, 45)
                .addComponent(ButtonStworzPlikPDFzTerazniejszymUstawieniem)
                .addContainerGap())
        );

        SliderRozmycie.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderRozmycieStateChanged(evt);
            }
        });

        LabelRozmycie.setText("Rozmycie");

        LabelCzulosc.setText("Czułość");

        SliderCzulosc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderCzuloscStateChanged(evt);
            }
        });

        LabelMinWielkoscX.setText("Minimalna Wielkość X");

        SliderMinWielkoscX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderMinWielkoscXStateChanged(evt);
            }
        });

        LabelMinWielkoscY.setText("Minimalna Wielkość Y");

        SliderMinWielkoscY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderMinWielkoscYStateChanged(evt);
            }
        });

        LabelRozmycieWartosc.setText(String.valueOf(SliderRozmycie.getValue())
        );

        LabelCzuloscWartosc.setText(String.valueOf(SliderCzulosc.getValue()));

        LabelMinimalnaWielkoscXWartosc.setText(String.valueOf(SliderMinWielkoscX.getValue()));

        LabelMinimalnaWielkoscYWartosc.setText(String.valueOf(SliderMinWielkoscY.getValue()));

        javax.swing.GroupLayout ParametryDetekcjiZakladkaLayout = new javax.swing.GroupLayout(ParametryDetekcjiZakladka);
        ParametryDetekcjiZakladka.setLayout(ParametryDetekcjiZakladkaLayout);
        ParametryDetekcjiZakladkaLayout.setHorizontalGroup(
            ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderRozmycie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelRozmycieWartosc))
                    .addComponent(LabelRozmycie)
                    .addComponent(LabelCzulosc)
                    .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderCzulosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelCzuloscWartosc))
                    .addComponent(LabelMinWielkoscX)
                    .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderMinWielkoscX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelMinimalnaWielkoscXWartosc))
                    .addComponent(LabelMinWielkoscY)
                    .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderMinWielkoscY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelMinimalnaWielkoscYWartosc)))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        ParametryDetekcjiZakladkaLayout.setVerticalGroup(
            ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelRozmycie)
                .addGap(12, 12, 12)
                .addGroup(ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderRozmycie, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelRozmycieWartosc))
                .addGap(12, 12, 12)
                .addGroup(ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelCzulosc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SliderCzulosc, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelCzuloscWartosc))
                .addGap(12, 12, 12)
                .addGroup(ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelMinWielkoscX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SliderMinWielkoscX, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelMinimalnaWielkoscXWartosc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(12, 12, 12)
                .addGroup(ParametryDetekcjiZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ParametryDetekcjiZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelMinWielkoscY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SliderMinWielkoscY, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelMinimalnaWielkoscYWartosc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralnaStateChanged(evt);
            }
        });

        LabelPlaskiPPProcentZapelnieniaJasnymiProgSpiralna.setText("Procent zapełnienia jasnymi pikselami dla galaktyk Spiralnych");

        LabelPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata.setText("Procent zapełniania jasnymi pikselami dla galaktyk Soczewkowatych");

        SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowataStateChanged(evt);
            }
        });

        LabelPlaskiPPProcentZapelnieniaBialymiProgSoczewkowata.setText("Procent zapełniania białymi pikselami dla galaktyk Soczewkowatych");

        SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowataStateChanged(evt);
            }
        });

        LabelPZJPGSpi.setText(String.valueOf(SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna.getValue())
        );

        LabelPZJPGS.setText(String.valueOf(SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata.getValue())
        );

        LabelPZBPGS.setText(String.valueOf(SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata.getValue())
        );

        javax.swing.GroupLayout UstawieniaPlaskiPrzekatnyZakladkaLayout = new javax.swing.GroupLayout(UstawieniaPlaskiPrzekatnyZakladka);
        UstawieniaPlaskiPrzekatnyZakladka.setLayout(UstawieniaPlaskiPrzekatnyZakladkaLayout);
        UstawieniaPlaskiPrzekatnyZakladkaLayout.setHorizontalGroup(
            UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createSequentialGroup()
                .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createSequentialGroup()
                        .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelPlaskiPPProcentZapelnieniaBialymiProgSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelPZJPGS)
                            .addComponent(LabelPZBPGS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSoczewkowate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiBialymiSoczewkowate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createSequentialGroup()
                        .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(LabelPlaskiPPProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                            .addComponent(SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelPZJPGSpi)
                        .addGap(8, 8, 8)
                        .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSpiralne, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        UstawieniaPlaskiPrzekatnyZakladkaLayout.setVerticalGroup(
            UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelPlaskiPPProcentZapelnieniaJasnymiProgSpiralna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSpiralne, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelPZJPGSpi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LabelPZJPGS)
                        .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSoczewkowate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelPlaskiPPProcentZapelnieniaBialymiProgSoczewkowata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelPlaskiPPProcentZapelnieniapikselamiBialymiSoczewkowate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UstawieniaPlaskiPrzekatnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LabelPZBPGS)
                        .addComponent(SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        LabelPlaskiSymProcentZapelnieniaJasnymiProgKarlowata.setText("Procent zapełnienia Jasnymi dla Karłowatych");

        LabelPlaskiSymProcentZapelnieniaJasnymiProgSpiralna.setText("Procent zapełnienia Jasnymi dla Spiralnych");

        LabelPlaskiSymProcentZapelnieniaJasnymiBialymiProgSpiralna.setText("Procent zapełnienia Białymi dla Spiralnych");

        LabelPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata.setText("Procent zapełnienia Jasnymi dla Soczewkowatych");

        LabelPlaskiSymProcentZapelnieniaBialymiProgSoczewkowata.setText("Procent zapełnienia Białymi dla Soczewkowatych");

        SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowataStateChanged(evt);
            }
        });

        SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralnaStateChanged(evt);
            }
        });

        SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralnaStateChanged(evt);
            }
        });

        SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowataStateChanged(evt);
            }
        });

        SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowataStateChanged(evt);
            }
        });

        LabelPZJDK.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata.getValue())
        );

        LabelPZJS.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna.getValue())
        );

        LabelPZBS.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna.getValue())
        );

        LabelPZJSocz.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata.getValue())
        );

        LabelPZBSocz.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata.getValue())
        );

        javax.swing.GroupLayout UstawieniaPłaskiSymetrycznyZakladkaLayout = new javax.swing.GroupLayout(UstawieniaPłaskiSymetrycznyZakladka);
        UstawieniaPłaskiSymetrycznyZakladka.setLayout(UstawieniaPłaskiSymetrycznyZakladkaLayout);
        UstawieniaPłaskiSymetrycznyZakladkaLayout.setHorizontalGroup(
            UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgKarlowata)
                    .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiBialymiProgSpiralna)
                    .addComponent(SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgSpiralna)
                    .addComponent(LabelPlaskiSymProcentZapelnieniaBialymiProgSoczewkowata)
                    .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata)
                    .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelPZBSocz)
                    .addComponent(LabelPZJSocz)
                    .addComponent(LabelPZBS)
                    .addComponent(LabelPZJS)
                    .addComponent(LabelPZJDK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabePlaskiSymProcentZapelenieniaBialymiSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabePlaskiSymProcentZapelenieniaBialymiSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiKarlowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(82, 82, 82))
        );
        UstawieniaPłaskiSymetrycznyZakladkaLayout.setVerticalGroup(
            UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgKarlowata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiKarlowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelPZJDK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgSpiralna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                        .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 15, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiBialymiProgSpiralna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabePlaskiSymProcentZapelenieniaBialymiSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                        .addComponent(SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 15, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                        .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(LabePlaskiSymProcentZapelenieniaJasnymiSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LabelPlaskiSymProcentZapelnieniaBialymiProgSoczewkowata)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                        .addComponent(LabelPZJSocz)
                                        .addGap(41, 41, 41)))
                                .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(LabePlaskiSymProcentZapelenieniaBialymiSoczewkowata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(LabelPZBSocz))
                                .addContainerGap(27, Short.MAX_VALUE))
                            .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                                .addComponent(LabelPZBS)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(UstawieniaPłaskiSymetrycznyZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelPZJS)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        LabelPelnyProcentZapelnieniaJasnymiProgKarlowata.setText("Procent zapełnienia jasnymi pikselami dla galaktyk karłowatych");

        LabelPelnyProcentZapelnieniaBiałymiProgKarlowata.setText("Procent zapełnienia białymi pikselami dla galaktyk karłowatych");

        LabelPelnyProcentZapelnieniaJasnymiProgSpiralna.setText("Procent zapełnienia jasnymi pikselami dla galaktyk spiralnych");

        LabelPelnyProcentZapelnieniaBiałymiProgSpiralna.setText("Procent zapełnienia białymii pikselami dla galaktyk spiralnych");

        LabelPelnyLiczbaJasnychProgObiektow.setText("Liczba jasnych obiektow");

        LabelPelnyProcentZapelnieniaBiałymiProgEliptyczna.setText("Procent zapełnienia białymi pikselami dla galaktyk eliptycznych");

        SliderPelnyProcentZapelnieniaJasnymiProgKarlowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyProcentZapelnieniaJasnymiProgKarlowataStateChanged(evt);
            }
        });

        SliderPelnyProcentZapelnieniaBiałymiProgKarlowata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyProcentZapelnieniaBiałymiProgKarlowataStateChanged(evt);
            }
        });

        SliderPelnyProcentZapelnieniaJasnymiProgSpiralna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyProcentZapelnieniaJasnymiProgSpiralnaStateChanged(evt);
            }
        });

        SliderPelnyProcentZapelnieniaBiałymiProgSpiralna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyProcentZapelnieniaBiałymiProgSpiralnaStateChanged(evt);
            }
        });

        SliderPelnyLiczbaJasnychProgObiektow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyLiczbaJasnychProgObiektowStateChanged(evt);
            }
        });

        SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPelnyProcentZapelnieniaBiałymiProgEliptycznaStateChanged(evt);
            }
        });

        LabelPZJPGK.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna.getValue())
        );

        LabelPZBPGK.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgKarlowata.getValue())
        );

        LabelPZBPGSPisarlne.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgSpiralna.getValue())
        );

        LabelPZJPGSpiralne.setText(String.valueOf(SliderPelnyProcentZapelnieniaJasnymiProgSpiralna.getValue())
        );

        LabelLJO.setText(String.valueOf(SliderPelnyLiczbaJasnychProgObiektow.getValue())
        );

        LabelPZBPGE.setText(String.valueOf(SliderPelnyProcentZapelnieniaJasnymiProgKarlowata.getValue())
        );

        javax.swing.GroupLayout UstawieniaPelnyZakladkaLayout = new javax.swing.GroupLayout(UstawieniaPelnyZakladka);
        UstawieniaPelnyZakladka.setLayout(UstawieniaPelnyZakladkaLayout);
        UstawieniaPelnyZakladkaLayout.setHorizontalGroup(
            UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgKarlowata)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgEliptyczna)
                        .addGap(105, 105, 105))
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelPelnyLiczbaJasnychProgObiektow)
                        .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(LabelPelnyProcentZapelnieniaBialymiEliptyczna, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(SliderPelnyProcentZapelnieniaJasnymiProgKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LabelPZBPGE)
                                .addGap(60, 60, 60)
                                .addComponent(LabelPelnyLiczbaJasnychObiektow, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderPelnyLiczbaJasnychProgObiektow, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelLJO))))
            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelPelnyProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(LabelPelnyProcentZapelnieniaJasnymiProgKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SliderPelnyProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(148, 148, 148)
                        .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelPZBPGSPisarlne)
                            .addComponent(LabelPZJPGSpiralne)
                            .addComponent(LabelPZBPGK)
                            .addComponent(LabelPZJPGK))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(LabelPelnyProcentZapelnieniaJasnymiKarlowata, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelPelnyProcentZapelnieniaBiałymiSpiralna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        UstawieniaPelnyZakladkaLayout.setVerticalGroup(
            UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LabelPelnyProcentZapelnieniaJasnymiKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelPelnyProcentZapelnieniaJasnymiProgKarlowata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelPZJPGK)
                            .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgKarlowata)
                .addGap(12, 12, 12)
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgKarlowata, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPZBPGK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelPelnyProcentZapelnieniaJasnymiProgSpiralna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderPelnyProcentZapelnieniaJasnymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPZJPGSpiralne))
                .addGap(12, 12, 12)
                .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgSpiralna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SliderPelnyProcentZapelnieniaBiałymiProgSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPelnyProcentZapelnieniaBiałymiSpiralna, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPZBPGSPisarlne))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelPelnyProcentZapelnieniaBiałymiProgEliptyczna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                        .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LabelPelnyLiczbaJasnychObiektow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SliderPelnyProcentZapelnieniaJasnymiProgKarlowata, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelPZBPGE, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(26, 26, 26)
                        .addComponent(LabelPelnyProcentZapelnieniaBialymiEliptyczna, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UstawieniaPelnyZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LabelLJO)
                        .addGroup(UstawieniaPelnyZakladkaLayout.createSequentialGroup()
                            .addComponent(LabelPelnyLiczbaJasnychProgObiektow)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(SliderPelnyLiczbaJasnychProgObiektow, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        LabelNieregularnaProgRozmycie.setText("Rozmycie ");

        LabelNieregularnaProgJasnosci.setText("Próg Jasności");

        LabelWartoscRozmycie.setText(String.valueOf(SliderNieregularnaProgRozmycie.getValue())
        );

        LabelWartoscProgJasnosci.setText(String.valueOf(SliderNieregularnaProgJasnosc.getValue())
        );

        javax.swing.GroupLayout UstawieniaNieregularneZakladkaLayout = new javax.swing.GroupLayout(UstawieniaNieregularneZakladka);
        UstawieniaNieregularneZakladka.setLayout(UstawieniaNieregularneZakladkaLayout);
        UstawieniaNieregularneZakladkaLayout.setHorizontalGroup(
            UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                        .addComponent(SliderNieregularnaProgRozmycie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelNieregularnaRozmycie))
                    .addComponent(LabelNieregularnaProgRozmycie)
                    .addComponent(LabelNieregularnaProgJasnosci)
                    .addGroup(UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LabelWartoscRozmycie)
                        .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                            .addComponent(SliderNieregularnaProgJasnosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(LabelNieregularnaJansosc))
                                .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                                    .addGap(41, 41, 41)
                                    .addComponent(LabelWartoscProgJasnosci))))))
                .addContainerGap(233, Short.MAX_VALUE))
        );
        UstawieniaNieregularneZakladkaLayout.setVerticalGroup(
            UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(LabelNieregularnaProgRozmycie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SliderNieregularnaProgRozmycie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelNieregularnaRozmycie)
                    .addComponent(LabelWartoscRozmycie))
                .addGap(34, 34, 34)
                .addGroup(UstawieniaNieregularneZakladkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UstawieniaNieregularneZakladkaLayout.createSequentialGroup()
                        .addComponent(LabelNieregularnaProgJasnosci)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SliderNieregularnaProgJasnosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelNieregularnaJansosc)
                    .addComponent(LabelWartoscProgJasnosci))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        PanelGlowny.setLayer(NatezenieKolorowZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(UstawieniaObrazuZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(OperacjeNaObrazachZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(ParametryDetekcjiZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(UstawieniaPlaskiPrzekatnyZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(UstawieniaPłaskiSymetrycznyZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(UstawieniaPelnyZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);
        PanelGlowny.setLayer(UstawieniaNieregularneZakladka, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout PanelGlownyLayout = new javax.swing.GroupLayout(PanelGlowny);
        PanelGlowny.setLayout(PanelGlownyLayout);
        PanelGlownyLayout.setHorizontalGroup(
            PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OperacjeNaObrazachZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(NatezenieKolorowZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaObrazuZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ParametryDetekcjiZakladka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPlaskiPrzekatnyZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPłaskiSymetrycznyZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPelnyZakladka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaNieregularneZakladka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelGlownyLayout.setVerticalGroup(
            PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OperacjeNaObrazachZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(NatezenieKolorowZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaObrazuZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelGlownyLayout.createSequentialGroup()
                    .addComponent(ParametryDetekcjiZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPlaskiPrzekatnyZakladka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPłaskiSymetrycznyZakladka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaPelnyZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PanelGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UstawieniaNieregularneZakladka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MenuUstawieniaObrazu.setText("Ustawienia Obrazu");

        NatezenieKolorow.setText("Natężenie Kolorów");
        NatezenieKolorow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NatezenieKolorowMouseClicked(evt);
            }
        });
        NatezenieKolorow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NatezenieKolorowActionPerformed(evt);
            }
        });
        MenuUstawieniaObrazu.add(NatezenieKolorow);

        UstawieniaObrazu.setText("Ustawienia Obrazu");
        UstawieniaObrazu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaObrazuActionPerformed(evt);
            }
        });
        MenuUstawieniaObrazu.add(UstawieniaObrazu);

        OperacjeNaObrazach.setText("Operacje Na Obrazach");
        OperacjeNaObrazach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperacjeNaObrazachActionPerformed(evt);
            }
        });
        MenuUstawieniaObrazu.add(OperacjeNaObrazach);

        jMenuBar1.add(MenuUstawieniaObrazu);

        MenuUstawieniaSelekcji.setText("Ustawienia Selekcji");

        ParametryDetekcji.setText("Parametry Detekcji");
        ParametryDetekcji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParametryDetekcjiActionPerformed(evt);
            }
        });
        MenuUstawieniaSelekcji.add(ParametryDetekcji);

        UstawieniaPłaskiPrzekątny.setText("Ustawienia Płaski - Przekątny ");
        UstawieniaPłaskiPrzekątny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaPłaskiPrzekątnyActionPerformed(evt);
            }
        });
        MenuUstawieniaSelekcji.add(UstawieniaPłaskiPrzekątny);

        UstawieniaPłaskiSymetryczny.setText("Ustawienia Płaski - Symetryczny");
        UstawieniaPłaskiSymetryczny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaPłaskiSymetrycznyActionPerformed(evt);
            }
        });
        MenuUstawieniaSelekcji.add(UstawieniaPłaskiSymetryczny);

        UstawieniaPełny.setText("Ustawienia Pełny");
        UstawieniaPełny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaPełnyActionPerformed(evt);
            }
        });
        MenuUstawieniaSelekcji.add(UstawieniaPełny);

        UstawieniaNieregularne.setText("Ustawienia Nieregularne");
        UstawieniaNieregularne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UstawieniaNieregularneActionPerformed(evt);
            }
        });
        MenuUstawieniaSelekcji.add(UstawieniaNieregularne);

        jMenuBar1.add(MenuUstawieniaSelekcji);

        Pomoc.setText("Pomoc");
        jMenuBar1.add(Pomoc);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelGlowny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(WykonanieSelekcjiMasowej)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(WykonanieSelekcjiPojedynczej)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ListaGalaktyk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(WybierzFolderZrodlowy)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(WybierzFolderWyjsciowy)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ZapiszWynikoweObrazy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ZaladujPojedynczyObraz)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(OknoEdycjiDlaPojedynczegoObrazu)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ZaladowanieOryginalu, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator1)
                        .addComponent(jSeparator2)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(264, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WybierzFolderWyjsciowy)
                    .addComponent(ZapiszWynikoweObrazy)
                    .addComponent(WybierzFolderZrodlowy)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ZaladujPojedynczyObraz)
                            .addComponent(OknoEdycjiDlaPojedynczegoObrazu)
                            .addComponent(ZaladowanieOryginalu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(WykonanieSelekcjiMasowej)
                                .addComponent(WykonanieSelekcjiPojedynczej))
                            .addComponent(ListaGalaktyk, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelGlowny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UstawieniaPłaskiPrzekątnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaPłaskiPrzekątnyActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false);
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(true);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);
    
    }//GEN-LAST:event_UstawieniaPłaskiPrzekątnyActionPerformed

    private void UstawieniaPłaskiSymetrycznyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaPłaskiSymetrycznyActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false);
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(true);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);  // TODO add your handling code here:
    }//GEN-LAST:event_UstawieniaPłaskiSymetrycznyActionPerformed

    private void NatezenieKolorowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NatezenieKolorowActionPerformed
    NatezenieKolorowZakladka.setVisible(true);
    UstawieniaObrazuZakladka.setVisible(false);
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);
    
    
    }//GEN-LAST:event_NatezenieKolorowActionPerformed

    private void NatezenieKolorowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NatezenieKolorowMouseClicked
    
    }//GEN-LAST:event_NatezenieKolorowMouseClicked

    private void UstawieniaObrazuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaObrazuActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(true);
    OperacjeNaObrazachZakladka.setVisible(false);  
    ParametryDetekcjiZakladka.setVisible(false);// TODO add your handling code here:
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);
    }//GEN-LAST:event_UstawieniaObrazuActionPerformed

    private void OperacjeNaObrazachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperacjeNaObrazachActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false); 
    OperacjeNaObrazachZakladka.setVisible(true);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);
    }//GEN-LAST:event_OperacjeNaObrazachActionPerformed

    private void ParametryDetekcjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParametryDetekcjiActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false); 
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(true);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(false);
    }//GEN-LAST:event_ParametryDetekcjiActionPerformed

    private void UstawieniaPełnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaPełnyActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false);
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(false);
    UstawieniaPelnyZakladka.setVisible(true);
    }//GEN-LAST:event_UstawieniaPełnyActionPerformed

    private void UstawieniaNieregularneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UstawieniaNieregularneActionPerformed
    NatezenieKolorowZakladka.setVisible(false);
    UstawieniaObrazuZakladka.setVisible(false);
    OperacjeNaObrazachZakladka.setVisible(false);
    ParametryDetekcjiZakladka.setVisible(false);
    
    UstawieniaPlaskiPrzekatnyZakladka.setVisible(false);
    UstawieniaPłaskiSymetrycznyZakladka.setVisible(false);
    UstawieniaNieregularneZakladka.setVisible(true);
    UstawieniaPelnyZakladka.setVisible(false);
    }//GEN-LAST:event_UstawieniaNieregularneActionPerformed

    private void ZaladujPojedynczyObrazMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZaladujPojedynczyObrazMouseClicked
        WybranyPlikObrazu = new WyborPliku();
          int returnVal = WybranyPlikObrazu.WybieraczPliku.showOpenDialog(null);
           if(returnVal == JFileChooser.APPROVE_OPTION) 
          {
           Konsola.append("Wybrałes ten plik z obrazem: " +
            WybranyPlikObrazu.WybieraczPliku.getSelectedFile().getAbsolutePath()+"\n");
           ScieszkaWybranyPlikObrazu=WybranyPlikObrazu.WybieraczPliku.getSelectedFile().getAbsolutePath();
           //OnkoWyświetlOryginał = new WyświetlaczObraz(ScieszkaWybranyPlikObrazu," Obraz Oryginalny");
           OknoWyświetlOryginał = new WyświetlaczObraz(ScieszkaWybranyPlikObrazu," Obraz Oryginalny",WybranyPlikObrazu.WybieraczPliku.getSelectedFile().getName());
           OknoEdytowalnyObraz  = new WyświetlaczObraz(ScieszkaWybranyPlikObrazu," Obraz Edytowalny",WybranyPlikObrazu.WybieraczPliku.getSelectedFile().getName());
           
           
    }//GEN-LAST:event_ZaladujPojedynczyObrazMouseClicked
    }
    private void WybierzFolderZrodlowyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WybierzFolderZrodlowyMouseClicked
        WybranyFolderWejscia = new WyborFolderu();
          int returnVal = WybranyFolderWejscia.WybieraczFolderu.showOpenDialog(null);
           if(returnVal == JFileChooser.APPROVE_OPTION) {
           Konsola.append("Wybrałes ten folder jako źródłowy: " +
           WybranyFolderWejscia.WybieraczFolderu.getSelectedFile().getAbsolutePath()+"\n");
           }
        try 
        {
           ListaObrazówWFolderze = WybranyFolderWejscia.ListaPlikówWFolderze();
           int a  = 0;
        } 
        catch (IOException ex) {
            Logger.getLogger(PanelSterowania.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_WybierzFolderZrodlowyMouseClicked
    
    private void WybierzFolderWyjsciowyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WybierzFolderWyjsciowyMouseClicked
     WybranyFolderWyjscia = new WyborFolderu();
          int returnVal = WybranyFolderWyjscia.WybieraczFolderu.showOpenDialog(null);
           if(returnVal == JFileChooser.APPROVE_OPTION) {
           Konsola.append("Wybrałes ten folder jako Wyjściowy: " +
            WybranyFolderWyjscia.WybieraczFolderu.getSelectedFile().getAbsolutePath()+"\n");
           }
    }//GEN-LAST:event_WybierzFolderWyjsciowyMouseClicked

    
    private void ZaladowanieOryginaluMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZaladowanieOryginaluMouseClicked
      
      
      OknoWyświetlOryginał.setVisible(true);
      
      
       
    }//GEN-LAST:event_ZaladowanieOryginaluMouseClicked

    private void SliderCzerwonyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderCzerwonyStateChanged
     LabelCzerwonyWartosc.setText(String.valueOf(SliderCzerwony.getValue()));
     
     
    }//GEN-LAST:event_SliderCzerwonyStateChanged

    private void SliderZielonyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderZielonyStateChanged
        LabelZielonyWartosc.setText(String.valueOf(SliderZielony.getValue()));
    }//GEN-LAST:event_SliderZielonyStateChanged

    private void SliderNiebieskiStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderNiebieskiStateChanged
        LabelNiebieskiWartosc.setText(String.valueOf(SliderNiebieski.getValue()));
    }//GEN-LAST:event_SliderNiebieskiStateChanged

    private void ToggleProgowanieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToggleProgowanieActionPerformed
       
    }//GEN-LAST:event_ToggleProgowanieActionPerformed

    private void SliderJasnoscStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderJasnoscStateChanged
        LabelWartoscJasnosc.setText(String.valueOf(SliderJasnosc.getValue()));
    }//GEN-LAST:event_SliderJasnoscStateChanged

    private void SliderKontrastStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderKontrastStateChanged
      LabelWartoscKontrast.setText(String.valueOf(SliderKontrast.getValue()/1000.0));
    }//GEN-LAST:event_SliderKontrastStateChanged

    private void SliderWartoscProgowaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderWartoscProgowaStateChanged
        LabelWartoscWartoscProgowa.setText(String.valueOf(SliderWartoscProgowa.getValue()));
    }//GEN-LAST:event_SliderWartoscProgowaStateChanged

    private void WielkoscObrazuXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_WielkoscObrazuXStateChanged
        LabelWielkoscObrazuX.setText(String.valueOf(WielkoscObrazuX.getValue()));// TODO add your handling code here:
    }//GEN-LAST:event_WielkoscObrazuXStateChanged

    private void WielkoscObrazuYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_WielkoscObrazuYStateChanged
       LabelWielkoscObrazuY.setText(String.valueOf(WielkoscObrazuY.getValue()));
    }//GEN-LAST:event_WielkoscObrazuYStateChanged

    private void SliderMinWielkoscYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderMinWielkoscYStateChanged
       LabelMinimalnaWielkoscYWartosc.setText(String.valueOf(SliderMinWielkoscY.getValue()));
    }//GEN-LAST:event_SliderMinWielkoscYStateChanged

    private void SliderRozmycieStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderRozmycieStateChanged
     LabelRozmycieWartosc.setText(String.valueOf(SliderRozmycie.getValue()));        // TODO add your handling code here:
    }//GEN-LAST:event_SliderRozmycieStateChanged

    private void SliderCzuloscStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderCzuloscStateChanged
        LabelCzuloscWartosc.setText(String.valueOf(SliderCzulosc.getValue()));
    }//GEN-LAST:event_SliderCzuloscStateChanged

    private void SliderMinWielkoscXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderMinWielkoscXStateChanged
       LabelMinimalnaWielkoscXWartosc.setText(String.valueOf(SliderMinWielkoscX.getValue()));
    }//GEN-LAST:event_SliderMinWielkoscXStateChanged

    private void SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralnaStateChanged
        LabelPZJPGSpi.setText(String.valueOf(SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna.getValue()));
    }//GEN-LAST:event_SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralnaStateChanged

    private void SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowataStateChanged
       LabelPZJPGS.setText(String.valueOf(SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata.getValue()));
    }//GEN-LAST:event_SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowataStateChanged

    private void SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowataStateChanged
       LabelPZBPGS.setText(String.valueOf(SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata.getValue()));
    }//GEN-LAST:event_SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowataStateChanged

    private void SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowataStateChanged
        LabelPZJDK.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata.getValue()));
    }//GEN-LAST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowataStateChanged

    private void SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralnaStateChanged
        LabelPZJS.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna.getValue()));
    }//GEN-LAST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralnaStateChanged

    private void SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralnaStateChanged
       LabelPZBS.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna.getValue())); 
    }//GEN-LAST:event_SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralnaStateChanged

    private void SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowataStateChanged
        LabelPZJSocz.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata.getValue()));
    }//GEN-LAST:event_SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowataStateChanged

    private void SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowataStateChanged
      LabelPZBSocz.setText(String.valueOf(SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata.getValue()));  
    }//GEN-LAST:event_SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowataStateChanged

    private void SliderPelnyProcentZapelnieniaBiałymiProgEliptycznaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyProcentZapelnieniaBiałymiProgEliptycznaStateChanged
        LabelPZJPGK.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna.getValue()));
    }//GEN-LAST:event_SliderPelnyProcentZapelnieniaBiałymiProgEliptycznaStateChanged

    private void SliderPelnyLiczbaJasnychProgObiektowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyLiczbaJasnychProgObiektowStateChanged
        LabelLJO.setText(String.valueOf(SliderPelnyLiczbaJasnychProgObiektow.getValue()));
    }//GEN-LAST:event_SliderPelnyLiczbaJasnychProgObiektowStateChanged

    private void SliderPelnyProcentZapelnieniaBiałymiProgSpiralnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyProcentZapelnieniaBiałymiProgSpiralnaStateChanged
        LabelPZBPGSPisarlne.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgSpiralna.getValue()));
    }//GEN-LAST:event_SliderPelnyProcentZapelnieniaBiałymiProgSpiralnaStateChanged

    private void SliderPelnyProcentZapelnieniaJasnymiProgSpiralnaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyProcentZapelnieniaJasnymiProgSpiralnaStateChanged
        LabelPZJPGSpiralne.setText(String.valueOf(SliderPelnyProcentZapelnieniaJasnymiProgSpiralna.getValue())); // TODO add your handling code here:
    }//GEN-LAST:event_SliderPelnyProcentZapelnieniaJasnymiProgSpiralnaStateChanged

    private void SliderPelnyProcentZapelnieniaBiałymiProgKarlowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyProcentZapelnieniaBiałymiProgKarlowataStateChanged
        LabelPZBPGK.setText(String.valueOf(SliderPelnyProcentZapelnieniaBiałymiProgKarlowata.getValue()));
    }//GEN-LAST:event_SliderPelnyProcentZapelnieniaBiałymiProgKarlowataStateChanged

    private void SliderPelnyProcentZapelnieniaJasnymiProgKarlowataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPelnyProcentZapelnieniaJasnymiProgKarlowataStateChanged
        LabelPZBPGE.setText(String.valueOf(SliderPelnyProcentZapelnieniaJasnymiProgKarlowata.getValue()));
    }//GEN-LAST:event_SliderPelnyProcentZapelnieniaJasnymiProgKarlowataStateChanged

    private void OknoEdycjiDlaPojedynczegoObrazuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OknoEdycjiDlaPojedynczegoObrazuMouseClicked

            OknoEdytowalnyObraz.setVisible(true);
           // OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
           // OknoEdytowalnyObraz.Odswierzenie();
        
    }//GEN-LAST:event_OknoEdycjiDlaPojedynczegoObrazuMouseClicked

    private void SliderCzerwonyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderCzerwonyMouseReleased
        
       OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderJasnosc.getValue()+SliderCzerwony.getValue(), SliderJasnosc.getValue()+SliderZielony.getValue(), SliderJasnosc.getValue()+SliderNiebieski.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
       OknoEdytowalnyObraz.Odswierzenie();
       
    }//GEN-LAST:event_SliderCzerwonyMouseReleased

    private void ButtonStworzPlikJPGzTeraźniejszymUstawieniemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStworzPlikJPGzTeraźniejszymUstawieniemActionPerformed
        
        ZapisPliku ZapisObrazu = new ZapisPliku(OknoEdytowalnyObraz.pobierzNazwePliku());
        int returnVal = ZapisObrazu.WybieraczZapis.showSaveDialog(null);
           if(returnVal == JFileChooser.APPROVE_OPTION) {
           Konsola.append("Wybrałes ten folder jako Wyjściowy na zapis Zmodyfikowanego obrazu: " +
            ZapisObrazu.WybieraczZapis.getSelectedFile().getAbsolutePath()+"\n");
           }
        OknoEdytowalnyObraz.zapiszObraz(ZapisObrazu.WybieraczZapis.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_ButtonStworzPlikJPGzTeraźniejszymUstawieniemActionPerformed

    private void SliderZielonyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderZielonyMouseReleased
        OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
        OknoEdytowalnyObraz.Odswierzenie();
    }//GEN-LAST:event_SliderZielonyMouseReleased

    private void SliderNiebieskiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderNiebieskiMouseReleased
       OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
       OknoEdytowalnyObraz.Odswierzenie();
    }//GEN-LAST:event_SliderNiebieskiMouseReleased

    private void SliderJasnoscMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderJasnoscMouseReleased
       OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderJasnosc.getValue()+SliderCzerwony.getValue(), SliderJasnosc.getValue()+SliderZielony.getValue(), SliderJasnosc.getValue()+SliderNiebieski.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
       OknoEdytowalnyObraz.Odswierzenie();
    }//GEN-LAST:event_SliderJasnoscMouseReleased

    private void SliderKontrastMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderKontrastMouseReleased
      OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderJasnosc.getValue()+SliderCzerwony.getValue(), SliderJasnosc.getValue()+SliderZielony.getValue(), SliderJasnosc.getValue()+SliderNiebieski.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
      OknoEdytowalnyObraz.Odswierzenie();
    }//GEN-LAST:event_SliderKontrastMouseReleased

    private void ZapiszWynikoweObrazyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZapiszWynikoweObrazyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZapiszWynikoweObrazyActionPerformed

    private void ZaladujPojedynczyObrazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZaladujPojedynczyObrazActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZaladujPojedynczyObrazActionPerformed

    private void SliderWartoscProgowaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SliderWartoscProgowaMouseReleased
      OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderJasnosc.getValue()+SliderCzerwony.getValue(), SliderJasnosc.getValue()+SliderZielony.getValue(), SliderJasnosc.getValue()+SliderNiebieski.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
      OknoEdytowalnyObraz.Odswierzenie();
    }//GEN-LAST:event_SliderWartoscProgowaMouseReleased

    private void ToggleProgowanieMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ToggleProgowanieMouseDragged
     
    }//GEN-LAST:event_ToggleProgowanieMouseDragged

    private void ToggleProgowanieStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ToggleProgowanieStateChanged
      
    }//GEN-LAST:event_ToggleProgowanieStateChanged

    private void ToggleProgowanieMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ToggleProgowanieMousePressed
        ToggleEfektRozjasniania.setSelected(false);
        ToggleEfektPrzyciemniania.setSelected(false);
        
        if(ToggleProgowanie.isSelected())
        {
            ZastosujProgowanie=BRAK_PROGROWANIA;
        }
        else{
           ZastosujProgowanie=PROGOWANIE;
        }
        
        
          
        if(OknoEdytowalnyObraz.isVisible()){
            OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
            OknoEdytowalnyObraz.Odswierzenie();
        }
    }//GEN-LAST:event_ToggleProgowanieMousePressed

    private void ToggleEfektRozjasnianiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ToggleEfektRozjasnianiaMousePressed
        ToggleProgowanie.setSelected(false);
        ToggleEfektPrzyciemniania.setSelected(false);
        
        if(ToggleEfektRozjasniania.isSelected())
        {
            ZastosujProgowanie=BRAK_PROGROWANIA;
        }
        else{
            ZastosujProgowanie=EFEKT_ROZJASNIAJACY;
        }
        
           if(OknoEdytowalnyObraz.isVisible()){
            OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
            OknoEdytowalnyObraz.Odswierzenie();
        }
    }//GEN-LAST:event_ToggleEfektRozjasnianiaMousePressed

    private void ToggleEfektPrzyciemnianiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ToggleEfektPrzyciemnianiaMousePressed
        ToggleProgowanie.setSelected(false);
        ToggleEfektRozjasniania.setSelected(false);
        if(ToggleEfektPrzyciemniania.isSelected())
        {
            ZastosujProgowanie=BRAK_PROGROWANIA;
        }
        else{
            ZastosujProgowanie=EFEKT_PRZYCIEMNAJACY;
        }  
        
        
        
        if(OknoEdytowalnyObraz.isVisible()){
            OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
            OknoEdytowalnyObraz.Odswierzenie();
        }
    }//GEN-LAST:event_ToggleEfektPrzyciemnianiaMousePressed

    private void WykonanieSelekcjiPojedynczejMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WykonanieSelekcjiPojedynczejMouseClicked
     
        
        ZastosujProgowanie = PROGOWANIE;
        OknoEdytowalnyObraz.UstawTablicePikseli(OknoWyświetlOryginał.ModyfikujKoloryWKanaleRGB(SliderCzerwony.getValue()+SliderJasnosc.getValue(), SliderZielony.getValue()+SliderJasnosc.getValue(), SliderNiebieski.getValue()+SliderJasnosc.getValue(),SliderKontrast.getValue()/1000.0,ZastosujProgowanie,SliderWartoscProgowa.getValue()));
    
        AlgorytmSelekcji Algorytm = new AlgorytmSelekcji();
        //System.out.println(Algorytm.asymetryczny(OknoEdytowalnyObraz.PobierzObraz(),20, 128));
        
        
        //Algorytm.liczba_jader(OknoWyświetlOryginał.PobierzObraz(), 10, 10, 128, 100, 100);
        Algorytm.rozpoznanie(OknoWyświetlOryginał.PobierzObraz(), OknoEdytowalnyObraz.PobierzObraz(),OknoWyświetlOryginał.pobierzSciezkePliku(), 30, 40, 50, 50);
        OknoEdytowalnyObraz.UstawObraz(Algorytm.ListaGalaktyk.get(3));
       //System.out.println(Algorytm.asymetryczny(Algorytm.ListaGalaktyk.get(0),2, 20));
        PojedynczaSelekcja = Algorytm.ListaWykrytychGalaktyk();
        OknoListyGalaktyk = new OknoListyGalaktyk(PojedynczaSelekcja);
        Konsola.append(Algorytm.TypGalaktykiNazwa.get(3));
        OknoEdytowalnyObraz.Odswierzenie();
        
    }//GEN-LAST:event_WykonanieSelekcjiPojedynczejMouseClicked

    private void ListaGalaktykMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaGalaktykMouseClicked
       
       OknoListyGalaktyk.setVisible(true);
    }//GEN-LAST:event_ListaGalaktykMouseClicked
    

/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelSterowania.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonStworzPlikJPGzTeraźniejszymUstawieniem;
    private javax.swing.JButton ButtonStworzPlikPDFzTerazniejszymUstawieniem;
    private javax.swing.JTextArea Konsola;
    private javax.swing.JLabel LabePlaskiSymProcentZapelenieniaBialymiSoczewkowata;
    private javax.swing.JLabel LabePlaskiSymProcentZapelenieniaBialymiSpiralna;
    private javax.swing.JLabel LabePlaskiSymProcentZapelenieniaJasnymiKarlowata;
    private javax.swing.JLabel LabePlaskiSymProcentZapelenieniaJasnymiSoczewkowata;
    private javax.swing.JLabel LabePlaskiSymProcentZapelenieniaJasnymiSpiralna;
    private javax.swing.JLabel LabelCzerwony;
    private javax.swing.JLabel LabelCzerwonyWartosc;
    private javax.swing.JLabel LabelCzulosc;
    private javax.swing.JLabel LabelCzuloscWartosc;
    private javax.swing.JLabel LabelJasnosc;
    private javax.swing.JLabel LabelKontrast;
    private javax.swing.JLabel LabelLJO;
    private javax.swing.JLabel LabelMinWielkoscX;
    private javax.swing.JLabel LabelMinWielkoscY;
    private javax.swing.JLabel LabelMinimalnaWielkoscXWartosc;
    private javax.swing.JLabel LabelMinimalnaWielkoscYWartosc;
    private javax.swing.JLabel LabelNiebieski;
    private javax.swing.JLabel LabelNiebieskiWartosc;
    private javax.swing.JLabel LabelNieregularnaJansosc;
    private javax.swing.JLabel LabelNieregularnaProgJasnosci;
    private javax.swing.JLabel LabelNieregularnaProgRozmycie;
    private javax.swing.JLabel LabelNieregularnaRozmycie;
    private javax.swing.JLabel LabelPZBPGE;
    private javax.swing.JLabel LabelPZBPGK;
    private javax.swing.JLabel LabelPZBPGS;
    private javax.swing.JLabel LabelPZBPGSPisarlne;
    private javax.swing.JLabel LabelPZBS;
    private javax.swing.JLabel LabelPZBSocz;
    private javax.swing.JLabel LabelPZJDK;
    private javax.swing.JLabel LabelPZJPGK;
    private javax.swing.JLabel LabelPZJPGS;
    private javax.swing.JLabel LabelPZJPGSpi;
    private javax.swing.JLabel LabelPZJPGSpiralne;
    private javax.swing.JLabel LabelPZJS;
    private javax.swing.JLabel LabelPZJSocz;
    private javax.swing.JLabel LabelPelnyLiczbaJasnychObiektow;
    private javax.swing.JLabel LabelPelnyLiczbaJasnychProgObiektow;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaBialymiEliptyczna;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaBiałymiProgEliptyczna;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaBiałymiProgKarlowata;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaBiałymiProgSpiralna;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaBiałymiSpiralna;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaJasnymiKarlowata;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaJasnymiProgKarlowata;
    private javax.swing.JLabel LabelPelnyProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniaBialymiProgSoczewkowata;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniapikselamiBialymiSoczewkowate;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSoczewkowate;
    private javax.swing.JLabel LabelPlaskiPPProcentZapelnieniapikselamiJasnymiSpiralne;
    private javax.swing.JLabel LabelPlaskiSymProcentZapelnieniaBialymiProgSoczewkowata;
    private javax.swing.JLabel LabelPlaskiSymProcentZapelnieniaJasnymiBialymiProgSpiralna;
    private javax.swing.JLabel LabelPlaskiSymProcentZapelnieniaJasnymiProgKarlowata;
    private javax.swing.JLabel LabelPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata;
    private javax.swing.JLabel LabelPlaskiSymProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JLabel LabelRozmycie;
    private javax.swing.JLabel LabelRozmycieWartosc;
    private javax.swing.JLabel LabelWartoscJasnosc;
    private javax.swing.JLabel LabelWartoscKontrast;
    private javax.swing.JLabel LabelWartoscProgJasnosci;
    private javax.swing.JLabel LabelWartoscProgowa;
    private javax.swing.JLabel LabelWartoscRozmycie;
    private javax.swing.JLabel LabelWartoscWartoscProgowa;
    private javax.swing.JLabel LabelWielkoscObrazuPion;
    private javax.swing.JLabel LabelWielkoscObrazuX;
    private javax.swing.JLabel LabelWielkoscObrazuY;
    private javax.swing.JLabel LabelWielkoscObrazuZapisanegoPoziom;
    private javax.swing.JLabel LabelZielony;
    private javax.swing.JLabel LabelZielonyWartosc;
    private javax.swing.JButton ListaGalaktyk;
    private javax.swing.JMenu MenuUstawieniaObrazu;
    private javax.swing.JMenu MenuUstawieniaSelekcji;
    private javax.swing.JMenuItem NatezenieKolorow;
    private javax.swing.JPanel NatezenieKolorowZakladka;
    private javax.swing.JButton OknoEdycjiDlaPojedynczegoObrazu;
    private javax.swing.JMenuItem OperacjeNaObrazach;
    private javax.swing.JPanel OperacjeNaObrazachZakladka;
    public javax.swing.JLayeredPane PanelGlowny;
    private javax.swing.JMenuItem ParametryDetekcji;
    private javax.swing.JPanel ParametryDetekcjiZakladka;
    private javax.swing.JMenu Pomoc;
    public javax.swing.JSlider SliderCzerwony;
    private javax.swing.JSlider SliderCzulosc;
    private javax.swing.JSlider SliderJasnosc;
    private javax.swing.JSlider SliderKontrast;
    private javax.swing.JSlider SliderMinWielkoscX;
    private javax.swing.JSlider SliderMinWielkoscY;
    private javax.swing.JSlider SliderNiebieski;
    private javax.swing.JSlider SliderNieregularnaProgJasnosc;
    private javax.swing.JSlider SliderNieregularnaProgRozmycie;
    private javax.swing.JSlider SliderPelnyLiczbaJasnychProgObiektow;
    private javax.swing.JSlider SliderPelnyProcentZapelnieniaBiałymiProgEliptyczna;
    private javax.swing.JSlider SliderPelnyProcentZapelnieniaBiałymiProgKarlowata;
    private javax.swing.JSlider SliderPelnyProcentZapelnieniaBiałymiProgSpiralna;
    private javax.swing.JSlider SliderPelnyProcentZapelnieniaJasnymiProgKarlowata;
    private javax.swing.JSlider SliderPelnyProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JSlider SliderPlaskiPPProcentZapelneiniaBialymiProgSoczewkowata;
    private javax.swing.JSlider SliderPlaskiPPProcentZapelnieniaJasnymiProgSoczewkowata;
    private javax.swing.JSlider SliderPlaskiPPProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JSlider SliderPlaskiSymProcentZapelnieniaBialymiProgSpiralna;
    private javax.swing.JSlider SliderPlaskiSymProcentZapelnieniaBiałymiProgSoczewkowata;
    private javax.swing.JSlider SliderPlaskiSymProcentZapelnieniaJasnymiProgKarlowata;
    private javax.swing.JSlider SliderPlaskiSymProcentZapelnieniaJasnymiProgSoczewkowata;
    private javax.swing.JSlider SliderPlaskiSymProcentZapelnieniaJasnymiProgSpiralna;
    private javax.swing.JSlider SliderRozmycie;
    private javax.swing.JSlider SliderWartoscProgowa;
    private javax.swing.JSlider SliderZielony;
    private javax.swing.JToggleButton ToggleEfektPrzyciemniania;
    private javax.swing.JToggleButton ToggleEfektRozjasniania;
    private javax.swing.JToggleButton ToggleProgowanie;
    private javax.swing.JMenuItem UstawieniaNieregularne;
    private javax.swing.JPanel UstawieniaNieregularneZakladka;
    private javax.swing.JMenuItem UstawieniaObrazu;
    private javax.swing.JPanel UstawieniaObrazuZakladka;
    private javax.swing.JPanel UstawieniaPelnyZakladka;
    private javax.swing.JMenuItem UstawieniaPełny;
    private javax.swing.JPanel UstawieniaPlaskiPrzekatnyZakladka;
    private javax.swing.JMenuItem UstawieniaPłaskiPrzekątny;
    private javax.swing.JMenuItem UstawieniaPłaskiSymetryczny;
    private javax.swing.JPanel UstawieniaPłaskiSymetrycznyZakladka;
    private javax.swing.JSlider WielkoscObrazuX;
    private javax.swing.JSlider WielkoscObrazuY;
    private javax.swing.JButton WybierzFolderWyjsciowy;
    private javax.swing.JButton WybierzFolderZrodlowy;
    private javax.swing.JButton WykonanieSelekcjiMasowej;
    private javax.swing.JButton WykonanieSelekcjiPojedynczej;
    private javax.swing.JButton ZaladowanieOryginalu;
    public javax.swing.JButton ZaladujPojedynczyObraz;
    private javax.swing.JButton ZapiszWynikoweObrazy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
